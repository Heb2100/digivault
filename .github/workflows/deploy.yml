name: CI/CD to GKE (using Artifact Registry)

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Set up GCP auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      - name: Configure Docker to use gcloud as a credential helper
        run: |
          gcloud auth configure-docker asia-northeast3-docker.pkg.dev
      
      - name: Inject Supabase ENV to .env.production
        run: |
          echo "NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}" >> .env.production
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}" >> .env.production

      - name: Build and Push Docker image to Artifact Registry
        run: |
          IMAGE_REPO="asia-northeast3-docker.pkg.dev/aesthetic-fiber-462503-t5/digivault"
          IMAGE_NAME="digivault-app"
          IMAGE_TAG="$(date +%Y%m%d%H%M%S)"

          # --- 완전한 이미지 경로를 만듭니다 ---
          FULL_IMAGE_NAME="$IMAGE_REPO/$IMAGE_NAME:$IMAGE_TAG"
          
          docker build --no-cache -t $FULL_IMAGE_NAME . # 빌드 시에도 이 변수 사용
          docker push $FULL_IMAGE_NAME # 푸시 시에도 이 변수 사용
          
          echo "NEW_FULL_IMAGE_NAME=$FULL_IMAGE_NAME" >> $GITHUB_ENV # 다음 스텝으로 전달

      - name: Set up kubectl
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: aesthetic-fiber-462503-t5
          install_components: kubectl

      - name: Configure kubectl
        run: |
          gcloud container clusters get-credentials digivault-cluster --region asia-northeast3

      - name: Deploy via Helm
        run: |
          helm upgrade --install digivault ./helm/digivault --set image.name=${{ env.NEW_FULL_IMAGE_NAME }} --set image.pullPolicy=Always